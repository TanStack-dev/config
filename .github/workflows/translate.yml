name: Translate Documentation

on:
  schedule:
    - cron: '0 20 * * *' # Daily at 20:00 UTC (within DeepSeek API off-peak pricing window 16:30-00:30 UTC)
  workflow_dispatch: # Allow manual triggering
    inputs:
      target_language:
        description: 'Target language code (e.g., zh-hans, es, fr). Leave empty to translate all languages.'
        required: false
        type: string

# Add permissions needed for creating PRs
permissions:
  contents: write
  pull-requests: write

jobs:
  check_existing_branch:
    runs-on: ubuntu-latest
    outputs:
      branch_exists: ${{ steps.check_branch.outputs.exists }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history to ensure git log works properly

      - name: Check if docs/update-translations branch already exists
        id: check_branch
        run: |
          if git ls-remote --heads origin docs/update-translations | grep -q docs/update-translations; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
        shell: bash

  translate:
    needs: check_existing_branch
    if: ${{ needs.check_existing_branch.outputs.branch_exists == 'false' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for proper timestamp lookup

      - name: Configure git for proper history
        run: |
          # Configure Git to ensure we get accurate timestamps
          git config --global core.quotePath false
          # Explicitly fetch all history and tags to ensure git log has complete information
          git fetch --prune --unshallow --tags
          git log -1 --format=%at  # Test git log command works properly

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Run translation directly with npx
        run: |
          if [[ -n "${{ github.event.inputs.target_language }}" ]]; then
            echo "Translating for specific language: ${{ github.event.inputs.target_language }}"
            npx @tanstack-dev/translate-docs -t ${{ github.event.inputs.target_language }}
          else
            echo "Translating for all languages"
            npx @tanstack-dev/translate-docs
          fi
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Check for modifications
        id: check-changes
        run: |
          if [[ $(git status --porcelain | wc -l) -gt 0 ]]; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "Changes detected. Will proceed with formatting and commit."
          else
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "No changes detected after translation. Exiting workflow."
          fi

      # - name: Setup Tools
      #   if: steps.check-changes.outputs.has_changes == 'true'
      #   uses: ./.github/setup

      # - name: Format with Prettier
      #   if: steps.check-changes.outputs.has_changes == 'true'
      #   run: pnpm prettier:write

      - name: Create Pull Request
        if: steps.check-changes.outputs.has_changes == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          commit-message: 'docs: update documentation translations'
          title: 'Update translations'
          body: |
            This PR updates the documentation translations automatically.

            Generated by the translate workflow.
          branch: docs/update-translations
          delete-branch: true
          base: main
